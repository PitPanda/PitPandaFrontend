{"ast":null,"code":"export let cache = {};\n\nfunction getDoc(tag) {\n  if (cache[tag]) return cache[tag];\n  const promise = new Promise(async resolve => {\n    try {\n      const request = await fetch(`/api/username/${tag}`);\n      const json = await request.json();\n      console.log(json);\n      if (!json.success) resolve({\n        error: json.error || 'An error has occured'\n      });else {\n        cache[tag].result = json.name;\n        resolve(json.name);\n      }\n    } catch (e) {\n      resolve({\n        error: e\n      });\n    }\n  });\n  cache[tag] = {\n    promise\n  };\n  return cache[tag];\n}\n\nexport default getDoc;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/scripts/playerName.js"],"names":["cache","getDoc","tag","promise","Promise","resolve","request","fetch","json","console","log","success","error","result","name","e"],"mappings":"AAAA,OAAO,IAAIA,KAAK,GAAG,EAAZ;;AACP,SAASC,MAAT,CAAgBC,GAAhB,EAAoB;AAChB,MAAGF,KAAK,CAACE,GAAD,CAAR,EAAe,OAAOF,KAAK,CAACE,GAAD,CAAZ;AACf,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AACzC,QAAG;AACC,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,iBAAgBL,GAAI,EAAtB,CAA3B;AACA,YAAMM,IAAI,GAAG,MAAMF,OAAO,CAACE,IAAR,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAG,CAACA,IAAI,CAACG,OAAT,EAAkBN,OAAO,CAAC;AAACO,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,IAAY;AAApB,OAAD,CAAP,CAAlB,KACK;AACDZ,QAAAA,KAAK,CAACE,GAAD,CAAL,CAAWW,MAAX,GAAoBL,IAAI,CAACM,IAAzB;AACAT,QAAAA,OAAO,CAACG,IAAI,CAACM,IAAN,CAAP;AACH;AACJ,KATD,CASC,OAAMC,CAAN,EAAQ;AACLV,MAAAA,OAAO,CAAC;AAACO,QAAAA,KAAK,EAACG;AAAP,OAAD,CAAP;AACH;AACJ,GAbe,CAAhB;AAcAf,EAAAA,KAAK,CAACE,GAAD,CAAL,GAAW;AAACC,IAAAA;AAAD,GAAX;AACA,SAAOH,KAAK,CAACE,GAAD,CAAZ;AACH;;AAED,eAAeD,MAAf","sourcesContent":["export let cache = {};\nfunction getDoc(tag){\n    if(cache[tag]) return cache[tag];\n    const promise = new Promise(async resolve => {\n        try{\n            const request = await fetch(`/api/username/${tag}`);\n            const json = await request.json();\n            console.log(json);\n            if(!json.success) resolve({error:(json.error||'An error has occured')});\n            else {\n                cache[tag].result = json.name;\n                resolve(json.name);\n            } \n        }catch(e){\n            resolve({error:e});\n        }\n    });\n    cache[tag]={promise};\n    return cache[tag];\n}\n\nexport default getDoc;"]},"metadata":{},"sourceType":"module"}