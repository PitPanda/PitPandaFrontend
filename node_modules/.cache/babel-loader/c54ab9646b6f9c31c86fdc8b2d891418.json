{"ast":null,"code":"//I was sent this code by jackson#0001 idk if its his but sure aint mine. \nvar currId=0,obfuscators={},alreadyParsed=[],styleMap={'§0':'color:#000000','§1':'color:#0000AA','§2':'color:#00AA00','§3':'color:#00AAAA','§4':'color:#AA0000','§5':'color:#AA00AA','§6':'color:#FFAA00','§7':'color:#999999','§8':'color:#3f3f3f','§9':'color:#5555FF','§a':'color:#55FF55','§b':'color:#55FFFF','§c':'color:#FF5555','§d':'color:#FF55FF','§e':'color:#FFFF55','§f':'color:#FFFFFF','§l':'font-weight:bold','§m':'text-decoration:line-through','§n':'text-decoration:underline','§o':'font-style:italic'};var obfuscate=function obfuscate(elem,string){var multiMagic,currNode,listLen,nodeI;var randInt=function randInt(min,max){return Math.floor(Math.random()*(max-min+1))+min;};var replaceRand=function replaceRand(string,i){var randChar=String.fromCharCode(randInt(64,95));return string.substr(0,i)+randChar+string.substr(i+1,string.length);};var initMagic=function initMagic(el,str){var i=0,obsStr=str||el.innerHTML,strLen=obsStr.length;if(!strLen)return;obfuscators[currId].push(window.setInterval(function(){if(i>=strLen)i=0;obsStr=replaceRand(obsStr,i);el.innerHTML=obsStr;i++;},0));};if(string.indexOf('<br>')>-1){elem.innerHTML=string;listLen=elem.childNodes.length;for(nodeI=0;nodeI<listLen;nodeI++){currNode=elem.childNodes[nodeI];if(currNode.nodeType===3){multiMagic=document.createElement('span');multiMagic.innerHTML=currNode.nodeValue;elem.replaceChild(multiMagic,currNode);initMagic(multiMagic);}}}else{initMagic(elem,string);}};var applyCode=function applyCode(string,codes){var elem=document.createElement('span'),obfuscated=false;//string = string.replace(/\\x00/g, '');\ncodes.forEach(function(code){elem.style.cssText+=styleMap[code]+';';if(code==='§k'){obfuscate(elem,string);obfuscated=true;}});if(!obfuscated)elem.innerHTML=string;return elem;};var parseStyle=function parseStyle(string){var finalPre=document.createElement('pre'),codes=string.match(/§.{1}/g)||[],codesLen=codes.length,indexes=[],indexDelta,apply=[],strSlice,i;if(!obfuscators[currId])obfuscators[currId]=[];string=string.replace(/\\n|\\\\n/g,'<br>');for(i=0;i<codesLen;i++){indexes.push(string.indexOf(codes[i]));string=string.replace(codes[i],'\\x00\\x00');}if(indexes[0]!==0){finalPre.appendChild(applyCode(string.substring(0,indexes[0]),[]));}for(i=0;i<codesLen;i++){indexDelta=indexes[i+1]-indexes[i];if(indexDelta===2){while(indexDelta===2){apply.push(codes[i]);i++;indexDelta=indexes[i+1]-indexes[i];}apply.push(codes[i]);}else{apply.push(codes[i]);}if(apply.lastIndexOf('§r')>-1){apply=apply.slice(apply.lastIndexOf('§r')+1);}strSlice=string.substring(indexes[i],indexes[i+1]);finalPre.appendChild(applyCode(strSlice,apply));}return finalPre;};var clearObfuscators=function clearObfuscators(id){obfuscators[id].forEach(function(interval){clearInterval(interval);});alreadyParsed[id]=[];obfuscators[id]=[];};var mineParse=function mineParse(input){var parsed,i=currId;if(i>0){while(i--){if(alreadyParsed[i].nodeType){if(!document.contains(alreadyParsed[i])){clearObfuscators(i);}}}}parsed=parseStyle(input);alreadyParsed.push(parsed);currId++;return{parsed:parsed,raw:parsed.innerHTML};};module.exports=mineParse;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/scripts/colorCodes.js"],"names":["currId","obfuscators","alreadyParsed","styleMap","obfuscate","elem","string","multiMagic","currNode","listLen","nodeI","randInt","min","max","Math","floor","random","replaceRand","i","randChar","String","fromCharCode","substr","length","initMagic","el","str","obsStr","innerHTML","strLen","push","window","setInterval","indexOf","childNodes","nodeType","document","createElement","nodeValue","replaceChild","applyCode","codes","obfuscated","forEach","code","style","cssText","parseStyle","finalPre","match","codesLen","indexes","indexDelta","apply","strSlice","replace","appendChild","substring","lastIndexOf","slice","clearObfuscators","id","interval","clearInterval","mineParse","input","parsed","contains","raw","module","exports"],"mappings":"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","sourcesContent":["//I was sent this code by jackson#0001 idk if its his but sure aint mine. \nlet currId = 0,\n    obfuscators = {},\n    alreadyParsed = [],\n    styleMap = {\n        '§0': 'color:#000000',\n        '§1': 'color:#0000AA',\n        '§2': 'color:#00AA00',\n        '§3': 'color:#00AAAA',\n        '§4': 'color:#AA0000',\n        '§5': 'color:#AA00AA',\n        '§6': 'color:#FFAA00',\n        '§7': 'color:#999999',\n        '§8': 'color:#3f3f3f',\n        '§9': 'color:#5555FF',\n        '§a': 'color:#55FF55',\n        '§b': 'color:#55FFFF',\n        '§c': 'color:#FF5555',\n        '§d': 'color:#FF55FF',\n        '§e': 'color:#FFFF55',\n        '§f': 'color:#FFFFFF',\n        '§l': 'font-weight:bold',\n        '§m': 'text-decoration:line-through',\n        '§n': 'text-decoration:underline',\n        '§o': 'font-style:italic'\n    };\n\nconst obfuscate = (elem, string) => {\n    let multiMagic,\n        currNode,\n        listLen,\n        nodeI;\n\n    const randInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    const replaceRand = (string, i) => {\n        var randChar = String.fromCharCode(randInt(64, 95));\n        return string.substr(0, i) + randChar + string.substr(i + 1, string.length);\n    }\n\n    const initMagic = (el, str) => {\n        var i = 0,\n            obsStr = str || el.innerHTML,\n            strLen = obsStr.length;\n        if (!strLen) return;\n        obfuscators[currId].push(\n            window.setInterval(function () {\n                if (i >= strLen) i = 0;\n                obsStr = replaceRand(obsStr, i);\n                el.innerHTML = obsStr;\n                i++;\n            }, 0)\n        );\n    }\n\n    if (string.indexOf('<br>') > -1) {\n        elem.innerHTML = string;\n        listLen = elem.childNodes.length;\n        for (nodeI = 0; nodeI < listLen; nodeI++) {\n            currNode = elem.childNodes[nodeI];\n            if (currNode.nodeType === 3) {\n                multiMagic = document.createElement('span');\n                multiMagic.innerHTML = currNode.nodeValue;\n                elem.replaceChild(multiMagic, currNode);\n                initMagic(multiMagic);\n            }\n        }\n    } else {\n        initMagic(elem, string);\n    }\n}\n\nconst applyCode = (string, codes) => {\n    var elem = document.createElement('span'),\n        obfuscated = false;\n\n    //string = string.replace(/\\x00/g, '');\n\n    codes.forEach(function (code) {\n        elem.style.cssText += styleMap[code] + ';';\n        if (code === '§k') {\n            obfuscate(elem, string);\n            obfuscated = true;\n        }\n    });\n\n    if (!obfuscated) elem.innerHTML = string;\n\n    return elem;\n}\n\nconst parseStyle = (string) => {\n    var finalPre = document.createElement('pre'),\n        codes = string.match(/§.{1}/g) || [],\n        codesLen = codes.length,\n        indexes = [],\n        indexDelta,\n        apply = [],\n        strSlice,\n        i;\n\n    if (!obfuscators[currId]) obfuscators[currId] = [];\n\n    string = string.replace(/\\n|\\\\n/g, '<br>');\n\n    for (i = 0; i < codesLen; i++) {\n        indexes.push(string.indexOf(codes[i]));\n        string = string.replace(codes[i], '\\x00\\x00');\n    }\n\n    if (indexes[0] !== 0) {\n        finalPre.appendChild(applyCode(string.substring(0, indexes[0]), []));\n    }\n\n    for (i = 0; i < codesLen; i++) {\n        indexDelta = indexes[i + 1] - indexes[i];\n        if (indexDelta === 2) {\n            while (indexDelta === 2) {\n                apply.push(codes[i]);\n                i++;\n                indexDelta = indexes[i + 1] - indexes[i];\n            }\n            apply.push(codes[i]);\n        } else {\n            apply.push(codes[i]);\n        }\n        if (apply.lastIndexOf('§r') > -1) {\n            apply = apply.slice(apply.lastIndexOf('§r') + 1);\n        }\n        strSlice = string.substring(indexes[i], indexes[i + 1]);\n        finalPre.appendChild(applyCode(strSlice, apply));\n    }\n\n    return finalPre;\n}\n\nconst clearObfuscators = (id) => {\n    obfuscators[id].forEach((interval) => {\n        clearInterval(interval);\n    });\n    alreadyParsed[id] = [];\n    obfuscators[id] = [];\n}\n\nconst mineParse = (input) => {\n    var parsed,\n        i = currId;\n    if (i > 0) {\n        while (i--) {\n            if (alreadyParsed[i].nodeType) {\n                if (!document.contains(alreadyParsed[i])) {\n                    clearObfuscators(i);\n                }\n            }\n        }\n    }\n    parsed = parseStyle(input);\n    alreadyParsed.push(parsed);\n    currId++;\n    return {\n        parsed: parsed,\n        raw: parsed.innerHTML\n    };\n};\n\nmodule.exports = mineParse; "]},"metadata":{},"sourceType":"module"}