{"ast":null,"code":"import _regeneratorRuntime from\"/home/mcpqndq/repos/PitPandaProduction/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mcpqndq/repos/PitPandaProduction/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var cache={};function getDoc(tag){if(cache[tag])return cache[tag];var promise=new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve){var request,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"/api/username/\".concat(tag));case 3:request=_context.sent;_context.next=6;return request.json();case 6:json=_context.sent;console.log(json);if(!json.success)resolve({error:json.error||'An error has occured'});else{cache[tag].result=json.name;resolve(json.name);}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);resolve({error:_context.t0});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}());cache[tag]={promise:promise};return cache[tag];}export default getDoc;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/scripts/playerName.js"],"names":["cache","getDoc","tag","promise","Promise","resolve","fetch","request","json","console","log","success","error","result","name"],"mappings":"yUAAA,MAAO,IAAIA,CAAAA,KAAK,CAAG,EAAZ,CACP,QAASC,CAAAA,MAAT,CAAgBC,GAAhB,CAAoB,CAChB,GAAGF,KAAK,CAACE,GAAD,CAAR,CAAe,MAAOF,CAAAA,KAAK,CAACE,GAAD,CAAZ,CACf,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,0FAAY,iBAAMC,OAAN,yKAEEC,CAAAA,KAAK,yBAAkBJ,GAAlB,EAFP,QAEdK,OAFc,qCAGDA,CAAAA,OAAO,CAACC,IAAR,EAHC,QAGdA,IAHc,eAIpBC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAG,CAACA,IAAI,CAACG,OAAT,CAAkBN,OAAO,CAAC,CAACO,KAAK,CAAEJ,IAAI,CAACI,KAAL,EAAY,sBAApB,CAAD,CAAP,CAAlB,IACK,CACDZ,KAAK,CAACE,GAAD,CAAL,CAAWW,MAAX,CAAoBL,IAAI,CAACM,IAAzB,CACAT,OAAO,CAACG,IAAI,CAACM,IAAN,CAAP,CACH,CATmB,iFAWpBT,OAAO,CAAC,CAACO,KAAK,YAAN,CAAD,CAAP,CAXoB,qEAAZ,+DAAhB,CAcAZ,KAAK,CAACE,GAAD,CAAL,CAAW,CAACC,OAAO,CAAPA,OAAD,CAAX,CACA,MAAOH,CAAAA,KAAK,CAACE,GAAD,CAAZ,CACH,CAED,cAAeD,CAAAA,MAAf","sourcesContent":["export let cache = {};\nfunction getDoc(tag){\n    if(cache[tag]) return cache[tag];\n    const promise = new Promise(async resolve => {\n        try{\n            const request = await fetch(`/api/username/${tag}`);\n            const json = await request.json();\n            console.log(json);\n            if(!json.success) resolve({error:(json.error||'An error has occured')});\n            else {\n                cache[tag].result = json.name;\n                resolve(json.name);\n            } \n        }catch(e){\n            resolve({error:e});\n        }\n    });\n    cache[tag]={promise};\n    return cache[tag];\n}\n\nexport default getDoc;"]},"metadata":{},"sourceType":"module"}