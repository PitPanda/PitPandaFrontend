{"ast":null,"code":"import _slicedToArray from\"/home/mcpqndq/repos/PitPandaProduction/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{minutesToString}from'./frontendTools';import pitMaster from'../pitMaster.json';function toString(n){return toFixed(0)(n);}function toFixed(places){return function(n){if(typeof n==='number')return n.toLocaleString('en-US',{minimumFractionDigits:places,maximumFractionDigits:places});else return n+'';};}function toPercent(num){return toFixed(1)(num*100)+'%';}var methods={ownKeys:function ownKeys(hidden){var entries=Object.entries(this);if(!hidden)entries=entries.filter(function(_ref){var _ref2=_slicedToArray(_ref,2),hidden=_ref2[1].hidden;return!hidden;});return entries.sort(function(a,b){return a[1].short<b[1].short?-1:1;}).map(function(e){return e[0];});}};var funBigMap={toString:toString,toFixed:toFixed(2),minutesToString:minutesToString,toPercent:toPercent};var boards=new Proxy(pitMaster.Extra.Leaderboards,{get:function get(target,prop){if(prop in methods)return methods[prop].bind(target);if(!(prop in target))prop='error';return new Proxy(target[prop],{get:function get(subTarget,subProp){if(subProp===\"transform\")return funBigMap[subTarget[subProp]]||funBigMap[target.default[subProp]];if(subProp in subTarget)return subTarget[subProp];else return target.default[subProp];}});}});export default boards;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/scripts/leaderboards.js"],"names":["minutesToString","pitMaster","toString","n","toFixed","places","toLocaleString","minimumFractionDigits","maximumFractionDigits","toPercent","num","methods","ownKeys","hidden","entries","Object","filter","sort","a","b","short","map","e","funBigMap","boards","Proxy","Extra","Leaderboards","get","target","prop","bind","subTarget","subProp","default"],"mappings":"sKAAA,OAASA,eAAT,KAAgC,iBAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CAEA,QAASC,CAAAA,QAAT,CAAkBC,CAAlB,CAAqB,CACjB,MAAOC,CAAAA,OAAO,CAAC,CAAD,CAAP,CAAWD,CAAX,CAAP,CACH,CAED,QAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAyB,CACrB,MAAO,UAACF,CAAD,CAAO,CACV,GAAI,MAAOA,CAAAA,CAAP,GAAa,QAAjB,CAA2B,MAAOA,CAAAA,CAAC,CAACG,cAAF,CAAiB,OAAjB,CAA0B,CACxDC,qBAAqB,CAAEF,MADiC,CAExDG,qBAAqB,CAAEH,MAFiC,CAA1B,CAAP,CAA3B,IAIK,OAAOF,CAAAA,CAAC,CAAG,EAAX,CACR,CAND,CAOH,CAED,QAASM,CAAAA,SAAT,CAAmBC,GAAnB,CAAwB,CACpB,MAAON,CAAAA,OAAO,CAAC,CAAD,CAAP,CAAWM,GAAG,CAAG,GAAjB,EAAwB,GAA/B,CACH,CAGD,GAAMC,CAAAA,OAAO,CAAG,CACZC,OADY,kBACJC,MADI,CACI,CACZ,GAAIC,CAAAA,OAAO,CAAGC,MAAM,CAACD,OAAP,CAAe,IAAf,CAAd,CACA,GAAI,CAACD,MAAL,CAAaC,OAAO,CAAGA,OAAO,CAACE,MAAR,CAAe,gDAAMH,MAAN,UAAMA,MAAN,OAAoB,CAACA,MAArB,EAAf,CAAV,CACb,MAAOC,CAAAA,OAAO,CAACG,IAAR,CAAa,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAC,CAAD,CAAD,CAAKE,KAAL,CAAaD,CAAC,CAAC,CAAD,CAAD,CAAKC,KAAlB,CAA0B,CAAC,CAA3B,CAA+B,CAAzC,EAAb,EAAyDC,GAAzD,CAA6D,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAA9D,CAAP,CACH,CALW,CAAhB,CAQA,GAAMC,CAAAA,SAAS,CAAG,CACdrB,QAAQ,CAARA,QADc,CAEdE,OAAO,CAACA,OAAO,CAAC,CAAD,CAFD,CAGdJ,eAAe,CAAfA,eAHc,CAIdS,SAAS,CAATA,SAJc,CAAlB,CAOA,GAAMe,CAAAA,MAAM,CAAG,GAAIC,CAAAA,KAAJ,CAAWxB,SAAS,CAACyB,KAAV,CAAgBC,YAA3B,CAAyC,CACpDC,GAAG,CAAE,aAACC,MAAD,CAASC,IAAT,CAAkB,CACnB,GAAIA,IAAI,GAAInB,CAAAA,OAAZ,CAAqB,MAAOA,CAAAA,OAAO,CAACmB,IAAD,CAAP,CAAcC,IAAd,CAAmBF,MAAnB,CAAP,CACrB,GAAI,EAAEC,IAAI,GAAID,CAAAA,MAAV,CAAJ,CAAuBC,IAAI,CAAG,OAAP,CACvB,MAAO,IAAIL,CAAAA,KAAJ,CAAUI,MAAM,CAACC,IAAD,CAAhB,CAAwB,CAC3BF,GAAG,CAAE,aAACI,SAAD,CAAYC,OAAZ,CAAwB,CACzB,GAAIA,OAAO,GAAK,WAAhB,CAA6B,MAAOV,CAAAA,SAAS,CAACS,SAAS,CAACC,OAAD,CAAV,CAAT,EAAiCV,SAAS,CAACM,MAAM,CAACK,OAAP,CAAeD,OAAf,CAAD,CAAjD,CAC7B,GAAIA,OAAO,GAAID,CAAAA,SAAf,CAA0B,MAAOA,CAAAA,SAAS,CAACC,OAAD,CAAhB,CAA1B,IACK,OAAOJ,CAAAA,MAAM,CAACK,OAAP,CAAeD,OAAf,CAAP,CACR,CAL0B,CAAxB,CAAP,CAOH,CAXmD,CAAzC,CAAf,CAcA,cAAeT,CAAAA,MAAf","sourcesContent":["import { minutesToString } from './frontendTools';\r\nimport pitMaster from '../pitMaster.json';\r\n \r\nfunction toString(n) {\r\n    return toFixed(0)(n);\r\n}\r\n\r\nfunction toFixed(places) {\r\n    return (n) => {\r\n        if (typeof n === 'number') return n.toLocaleString('en-US', {\r\n            minimumFractionDigits: places,\r\n            maximumFractionDigits: places,\r\n        });\r\n        else return n + '';\r\n    }\r\n}\r\n\r\nfunction toPercent(num) {\r\n    return toFixed(1)(num * 100) + '%';\r\n}\r\n\r\n\r\nconst methods = {\r\n    ownKeys(hidden) {\r\n        let entries = Object.entries(this)\r\n        if (!hidden) entries = entries.filter(([, { hidden }]) => !hidden)\r\n        return entries.sort((a, b) => a[1].short < b[1].short ? -1 : 1).map(e => e[0]);\r\n    },\r\n};\r\n\r\nconst funBigMap = {\r\n    toString,\r\n    toFixed:toFixed(2),\r\n    minutesToString,\r\n    toPercent\r\n};\r\n\r\nconst boards = new Proxy( pitMaster.Extra.Leaderboards ,{\r\n    get: (target, prop) => {\r\n        if (prop in methods) return methods[prop].bind(target);\r\n        if (!(prop in target)) prop = 'error';\r\n        return new Proxy(target[prop], {\r\n            get: (subTarget, subProp) => {\r\n                if (subProp === \"transform\") return funBigMap[subTarget[subProp]] || funBigMap[target.default[subProp]];\r\n                if (subProp in subTarget) return subTarget[subProp];\r\n                else return target.default[subProp];\r\n            }\r\n        });\r\n    },\r\n});\r\n\r\nexport default boards;"]},"metadata":{},"sourceType":"module"}