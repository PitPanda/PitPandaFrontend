{"ast":null,"code":"const pitMaster = require('../pitMaster.json');\n\nconst Colors = pitMaster.Extra.ColorCodes;\n/**\n * Formats level like ingame\n * @param {number} prestige \n * @param {number} level \n * @returns {string} minecraft color formatted string\n */\n\nfunction levelString(prestige, level) {\n  let lc = pitMaster.Pit.Levels[Math.floor(level / 10)].ColorCode;\n  if (prestige === 0) return Colors.GRAY + '[' + lc + level + Colors.RESET + Colors.GRAY + ']';\n  let pc = pitMaster.Pit.Prestiges[prestige].ColorCode;\n  return pc + '[' + Colors.YELLOW + romanNumGen(prestige) + pc + '-' + lc + level + Colors.RESET + pc + ']';\n}\n\nmodule.exports.levelString = levelString;\n/**\n * Turns an time into a formatter string\n * ex: f(1234) = '20h 34m'\n * @param {number} minutes \n * @returns {string}\n */\n\nfunction minutesToString(min) {\n  if (min < 60) return `${min}m`;\n  let str = `${Math.floor(min / 60).toLocaleString()}h`;\n  if (min % 60 !== 0) str += ` ${Math.floor(min % 60)}m`;\n  return str;\n}\n\nmodule.exports.minutesToString = minutesToString;\n/**\n * Produces a nicely formatted string of the time since a given date in unix epoch seconds\n * @param {number} date \n * @returns {string}\n */\n\nfunction timeSince(date) {\n  // https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\n  var seconds = Math.floor((new Date() - date) / 1000);\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval < 5) {\n    return \"moments\";\n  }\n\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n}\n\nmodule.exports.timeSince = timeSince;\n/**\n * converts number to roman numeral string\n * @param {number} int\n * @returns {string} \n */\n\nfunction romanNumGen(int) {\n  //code also in apiTools.js\n  let roman = '';\n  roman += 'M'.repeat(int / 1000);\n  int %= 1000;\n  roman += 'CM'.repeat(int / 900);\n  int %= 900;\n  roman += 'D'.repeat(int / 500);\n  int %= 500;\n  roman += 'CD'.repeat(int / 400);\n  int %= 400;\n  roman += 'C'.repeat(int / 100);\n  int %= 100;\n  roman += 'XC'.repeat(int / 90);\n  int %= 90;\n  roman += 'L'.repeat(int / 50);\n  int %= 50;\n  roman += 'XL'.repeat(int / 40);\n  int %= 40;\n  roman += 'X'.repeat(int / 10);\n  int %= 10;\n  roman += 'IX'.repeat(int / 9);\n  int %= 9;\n  roman += 'V'.repeat(int / 5);\n  int %= 5;\n  roman += 'IV'.repeat(int / 4);\n  int %= 4;\n  roman += 'I'.repeat(int);\n  return roman;\n}\n\nmodule.exports.romanNumGen = romanNumGen;\n/**\n * Formats numbers nicely ex: f(1234, 2) = 1.2k\n * @param {number} number \n * @param {number} decPlaces \n * @returns {string}\n */\n\nfunction abbrNum(number, decPlaces) {\n  //https://stackoverflow.com/questions/2685911/is-there-a-way-to-round-numbers-into-a-reader-friendly-format-e-g-1-1k\n  // 2 decimal places => 100, 3 => 1000, etc\n  decPlaces = Math.pow(10, decPlaces); // Enumerate number abbreviations\n\n  var abbrev = [\"k\", \"m\", \"b\", \"t\"]; // Go through the array backwards, so we do the largest first\n\n  for (var i = abbrev.length - 1; i >= 0; i--) {\n    // Convert array index to \"1000\", \"1000000\", etc\n    var size = Math.pow(10, (i + 1) * 3); // If the number is bigger or equal do the abbreviation\n\n    if (size <= number) {\n      // Here, we multiply by decPlaces, round, and then divide by decPlaces.\n      // This gives us nice rounding to a particular decimal place.\n      number = Math.round(number * decPlaces / size) / decPlaces; // Handle special case where we round up to the next abbreviation\n\n      if (number === 1000 && i < abbrev.length - 1) {\n        number = 1;\n        i++;\n      } // Add the letter for the abbreviation\n\n\n      number += abbrev[i]; // We are done... stop\n\n      break;\n    }\n  }\n\n  return number;\n}\n\nmodule.exports.abbrNum = abbrNum;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/scripts/frontendTools.js"],"names":["pitMaster","require","Colors","Extra","ColorCodes","levelString","prestige","level","lc","Pit","Levels","Math","floor","ColorCode","GRAY","RESET","pc","Prestiges","YELLOW","romanNumGen","module","exports","minutesToString","min","str","toLocaleString","timeSince","date","seconds","Date","interval","int","roman","repeat","abbrNum","number","decPlaces","pow","abbrev","i","length","size","round"],"mappings":"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","sourcesContent":["const pitMaster = require('../pitMaster.json');\nconst Colors = pitMaster.Extra.ColorCodes;\n\n\n/**\n * Formats level like ingame\n * @param {number} prestige \n * @param {number} level \n * @returns {string} minecraft color formatted string\n */\nfunction levelString(prestige,level){\n    let lc = pitMaster.Pit.Levels[Math.floor(level/10)].ColorCode;\n    if(prestige===0) return Colors.GRAY+'['+lc+level+Colors.RESET+Colors.GRAY+']';\n    let pc=pitMaster.Pit.Prestiges[prestige].ColorCode;\n    return pc+'['+Colors.YELLOW+romanNumGen(prestige)+pc+'-'+lc+level+Colors.RESET+pc+']';\n} module.exports.levelString = levelString;\n\n/**\n * Turns an time into a formatter string\n * ex: f(1234) = '20h 34m'\n * @param {number} minutes \n * @returns {string}\n */\nfunction minutesToString(min){\n    if(min < 60) return `${min}m`;\n    let str = `${Math.floor(min/60).toLocaleString()}h`;\n    if(min%60!==0) str+=` ${Math.floor(min%60)}m`;\n    return str;\n} module.exports.minutesToString = minutesToString;\n\n/**\n * Produces a nicely formatted string of the time since a given date in unix epoch seconds\n * @param {number} date \n * @returns {string}\n */\nfunction timeSince(date) { // https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var interval = Math.floor(seconds / 31536000);\n    if (interval > 1) {\n        return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n        return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n        return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n        return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval < 5) {\n        return \"moments\";\n    }\n    if (interval > 1) {\n        return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n} module.exports.timeSince = timeSince;\n\n/**\n * converts number to roman numeral string\n * @param {number} int\n * @returns {string} \n */\nfunction romanNumGen(int) { //code also in apiTools.js\n    let roman = '';\n    roman +=  'M'.repeat(int / 1000);  int %= 1000; \n    roman += 'CM'.repeat(int / 900);   int %= 900; \n    roman +=  'D'.repeat(int / 500);   int %= 500;  \n    roman += 'CD'.repeat(int / 400);   int %= 400;\n    roman +=  'C'.repeat(int / 100);   int %= 100;\n    roman += 'XC'.repeat(int / 90);    int %= 90;\n    roman +=  'L'.repeat(int / 50);    int %= 50;\n    roman += 'XL'.repeat(int / 40);    int %= 40;\n    roman +=  'X'.repeat(int / 10);    int %= 10;\n    roman += 'IX'.repeat(int / 9);     int %= 9;\n    roman +=  'V'.repeat(int / 5);     int %= 5;\n    roman += 'IV'.repeat(int / 4);     int %= 4;\n    roman +=  'I'.repeat(int);\n    return roman;\n} module.exports.romanNumGen = romanNumGen;\n\n/**\n * Formats numbers nicely ex: f(1234, 2) = 1.2k\n * @param {number} number \n * @param {number} decPlaces \n * @returns {string}\n */\nfunction abbrNum(number, decPlaces) { //https://stackoverflow.com/questions/2685911/is-there-a-way-to-round-numbers-into-a-reader-friendly-format-e-g-1-1k\n    // 2 decimal places => 100, 3 => 1000, etc\n    decPlaces = Math.pow(10,decPlaces);\n\n    // Enumerate number abbreviations\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\n\n    // Go through the array backwards, so we do the largest first\n    for (var i=abbrev.length-1; i>=0; i--) {\n\n        // Convert array index to \"1000\", \"1000000\", etc\n        var size = Math.pow(10,(i+1)*3);\n\n        // If the number is bigger or equal do the abbreviation\n        if(size <= number) {\n             // Here, we multiply by decPlaces, round, and then divide by decPlaces.\n             // This gives us nice rounding to a particular decimal place.\n             number = Math.round(number*decPlaces/size)/decPlaces;\n\n             // Handle special case where we round up to the next abbreviation\n             if((number === 1000) && (i < abbrev.length - 1)) {\n                 number = 1;\n                 i++;\n             }\n\n             // Add the letter for the abbreviation\n             number += abbrev[i];\n\n             // We are done... stop\n             break;\n        }\n    }\n\n    return number;\n} module.exports.abbrNum = abbrNum;"]},"metadata":{},"sourceType":"module"}