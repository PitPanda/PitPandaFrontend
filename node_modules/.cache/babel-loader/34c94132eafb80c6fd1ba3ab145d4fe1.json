{"ast":null,"code":"var pitMaster=require('../pitMaster.json');var Colors=pitMaster.Extra.ColorCodes;/**\n * Formats level like ingame\n * @param {number} prestige \n * @param {number} level \n * @returns {string} minecraft color formatted string\n */function levelString(prestige,level){var lc=pitMaster.Pit.Levels[Math.floor(level/10)].ColorCode;if(prestige===0)return Colors.GRAY+'['+lc+level+Colors.RESET+Colors.GRAY+']';var pc=pitMaster.Pit.Prestiges[prestige].ColorCode;return pc+'['+Colors.YELLOW+romanNumGen(prestige)+pc+'-'+lc+level+Colors.RESET+pc+']';}module.exports.levelString=levelString;/**\n * Turns an time into a formatter string\n * ex: f(1234) = '20h 34m'\n * @param {number} minutes \n * @returns {string}\n */function minutesToString(min){if(min<60)return\"\".concat(min,\"m\");var str=\"\".concat(Math.floor(min/60).toLocaleString(),\"h\");if(min%60!==0)str+=\" \".concat(Math.floor(min%60),\"m\");return str;}module.exports.minutesToString=minutesToString;/**\n * Produces a nicely formatted string of the time since a given date in unix epoch seconds\n * @param {number} date \n * @returns {string}\n */function timeSince(date){// https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\nvar seconds=Math.floor((new Date()-date)/1000);var interval=Math.floor(seconds/31536000);if(interval>1){return interval+\" years\";}interval=Math.floor(seconds/2592000);if(interval>1){return interval+\" months\";}interval=Math.floor(seconds/86400);if(interval>1){return interval+\" days\";}interval=Math.floor(seconds/3600);if(interval>1){return interval+\" hours\";}interval=Math.floor(seconds/60);if(interval<5){return\"moments\";}if(interval>1){return interval+\" minutes\";}return Math.floor(seconds)+\" seconds\";}module.exports.timeSince=timeSince;/**\n * converts number to roman numeral string\n * @param {number} int\n * @returns {string} \n */function romanNumGen(int){//code also in apiTools.js\nvar roman='';roman+='M'.repeat(int/1000);int%=1000;roman+='CM'.repeat(int/900);int%=900;roman+='D'.repeat(int/500);int%=500;roman+='CD'.repeat(int/400);int%=400;roman+='C'.repeat(int/100);int%=100;roman+='XC'.repeat(int/90);int%=90;roman+='L'.repeat(int/50);int%=50;roman+='XL'.repeat(int/40);int%=40;roman+='X'.repeat(int/10);int%=10;roman+='IX'.repeat(int/9);int%=9;roman+='V'.repeat(int/5);int%=5;roman+='IV'.repeat(int/4);int%=4;roman+='I'.repeat(int);return roman;}module.exports.romanNumGen=romanNumGen;/**\n * Formats numbers nicely ex: f(1234, 2) = 1.2k\n * @param {number} number \n * @param {number} decPlaces \n * @returns {string}\n */function abbrNum(number,decPlaces){//https://stackoverflow.com/questions/2685911/is-there-a-way-to-round-numbers-into-a-reader-friendly-format-e-g-1-1k\n// 2 decimal places => 100, 3 => 1000, etc\ndecPlaces=Math.pow(10,decPlaces);// Enumerate number abbreviations\nvar abbrev=[\"k\",\"m\",\"b\",\"t\"];// Go through the array backwards, so we do the largest first\nfor(var i=abbrev.length-1;i>=0;i--){// Convert array index to \"1000\", \"1000000\", etc\nvar size=Math.pow(10,(i+1)*3);// If the number is bigger or equal do the abbreviation\nif(size<=number){// Here, we multiply by decPlaces, round, and then divide by decPlaces.\n// This gives us nice rounding to a particular decimal place.\nnumber=Math.round(number*decPlaces/size)/decPlaces;// Handle special case where we round up to the next abbreviation\nif(number===1000&&i<abbrev.length-1){number=1;i++;}// Add the letter for the abbreviation\nnumber+=abbrev[i];// We are done... stop\nbreak;}}return number;}module.exports.abbrNum=abbrNum;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/scripts/frontendTools.js"],"names":["pitMaster","require","Colors","Extra","ColorCodes","levelString","prestige","level","lc","Pit","Levels","Math","floor","ColorCode","GRAY","RESET","pc","Prestiges","YELLOW","romanNumGen","module","exports","minutesToString","min","str","toLocaleString","timeSince","date","seconds","Date","interval","int","roman","repeat","abbrNum","number","decPlaces","pow","abbrev","i","length","size","round"],"mappings":"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","sourcesContent":["const pitMaster = require('../pitMaster.json');\nconst Colors = pitMaster.Extra.ColorCodes;\n\n\n/**\n * Formats level like ingame\n * @param {number} prestige \n * @param {number} level \n * @returns {string} minecraft color formatted string\n */\nfunction levelString(prestige,level){\n    let lc = pitMaster.Pit.Levels[Math.floor(level/10)].ColorCode;\n    if(prestige===0) return Colors.GRAY+'['+lc+level+Colors.RESET+Colors.GRAY+']';\n    let pc=pitMaster.Pit.Prestiges[prestige].ColorCode;\n    return pc+'['+Colors.YELLOW+romanNumGen(prestige)+pc+'-'+lc+level+Colors.RESET+pc+']';\n} module.exports.levelString = levelString;\n\n/**\n * Turns an time into a formatter string\n * ex: f(1234) = '20h 34m'\n * @param {number} minutes \n * @returns {string}\n */\nfunction minutesToString(min){\n    if(min < 60) return `${min}m`;\n    let str = `${Math.floor(min/60).toLocaleString()}h`;\n    if(min%60!==0) str+=` ${Math.floor(min%60)}m`;\n    return str;\n} module.exports.minutesToString = minutesToString;\n\n/**\n * Produces a nicely formatted string of the time since a given date in unix epoch seconds\n * @param {number} date \n * @returns {string}\n */\nfunction timeSince(date) { // https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var interval = Math.floor(seconds / 31536000);\n    if (interval > 1) {\n        return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n        return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n        return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n        return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval < 5) {\n        return \"moments\";\n    }\n    if (interval > 1) {\n        return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n} module.exports.timeSince = timeSince;\n\n/**\n * converts number to roman numeral string\n * @param {number} int\n * @returns {string} \n */\nfunction romanNumGen(int) { //code also in apiTools.js\n    let roman = '';\n    roman +=  'M'.repeat(int / 1000);  int %= 1000; \n    roman += 'CM'.repeat(int / 900);   int %= 900; \n    roman +=  'D'.repeat(int / 500);   int %= 500;  \n    roman += 'CD'.repeat(int / 400);   int %= 400;\n    roman +=  'C'.repeat(int / 100);   int %= 100;\n    roman += 'XC'.repeat(int / 90);    int %= 90;\n    roman +=  'L'.repeat(int / 50);    int %= 50;\n    roman += 'XL'.repeat(int / 40);    int %= 40;\n    roman +=  'X'.repeat(int / 10);    int %= 10;\n    roman += 'IX'.repeat(int / 9);     int %= 9;\n    roman +=  'V'.repeat(int / 5);     int %= 5;\n    roman += 'IV'.repeat(int / 4);     int %= 4;\n    roman +=  'I'.repeat(int);\n    return roman;\n} module.exports.romanNumGen = romanNumGen;\n\n/**\n * Formats numbers nicely ex: f(1234, 2) = 1.2k\n * @param {number} number \n * @param {number} decPlaces \n * @returns {string}\n */\nfunction abbrNum(number, decPlaces) { //https://stackoverflow.com/questions/2685911/is-there-a-way-to-round-numbers-into-a-reader-friendly-format-e-g-1-1k\n    // 2 decimal places => 100, 3 => 1000, etc\n    decPlaces = Math.pow(10,decPlaces);\n\n    // Enumerate number abbreviations\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\n\n    // Go through the array backwards, so we do the largest first\n    for (var i=abbrev.length-1; i>=0; i--) {\n\n        // Convert array index to \"1000\", \"1000000\", etc\n        var size = Math.pow(10,(i+1)*3);\n\n        // If the number is bigger or equal do the abbreviation\n        if(size <= number) {\n             // Here, we multiply by decPlaces, round, and then divide by decPlaces.\n             // This gives us nice rounding to a particular decimal place.\n             number = Math.round(number*decPlaces/size)/decPlaces;\n\n             // Handle special case where we round up to the next abbreviation\n             if((number === 1000) && (i < abbrev.length - 1)) {\n                 number = 1;\n                 i++;\n             }\n\n             // Add the letter for the abbreviation\n             number += abbrev[i];\n\n             // We are done... stop\n             break;\n        }\n    }\n\n    return number;\n} module.exports.abbrNum = abbrNum;"]},"metadata":{},"sourceType":"module"}