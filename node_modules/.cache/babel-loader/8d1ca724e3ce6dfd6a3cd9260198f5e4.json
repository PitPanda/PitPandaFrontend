{"ast":null,"code":"var _jsxFileName = \"/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/Components/SearchField/SearchField.js\";\nimport React, { Component, Fragment } from \"react\";\nimport MinecraftText from '../Minecraft/MinecraftText';\nimport './SearchField.css';\n\nclass SearchField extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: this.props.says,\n      reporting: this.props.says,\n      userNumber: \"\",\n      showNumber: false\n    };\n    this.numRef = React.createRef();\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value.split('').filter(str => /[-+_!\"':a-zA-Z0-9 ]/.test(str)).join(''); // Filter our suggestions that don't contain the user's input\n\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion[1].Name.replace(/§./g, '').toLowerCase().indexOf(userInput.toLowerCase()) > -1); // Update the user input and filtered suggestions, reset the active\n      // suggestion and make sure the suggestions are shown\n\n      const showNumber = Boolean(this.props.suggestions.find(s => s[0] === userInput && !s[1].NoNumber));\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: userInput,\n        reporting: userInput,\n        showNumber,\n        userNumber: showNumber ? this.state.userNumber : ''\n      });\n      this.reportString(userInput, showNumber, this.state.userNumber, userInput);\n    };\n\n    this.onNumberChange = e => {\n      let userNumber = e.currentTarget.value.split('').filter(str => /[-+><0-9a-zA-Z]/.test(str)).join('');\n      this.setState({\n        userNumber\n      });\n      this.reportString(this.state.reporting, true, userNumber, this.state.userInput);\n    };\n\n    this.onClick = e => {\n      this.select(e.currentTarget.getAttribute('index'));\n    };\n\n    this.select = index => {\n      const reporting = this.state.filteredSuggestions[index][0];\n      const showNumber = Boolean(this.props.suggestions.find(s => s[0] === reporting && !s[1].NoNumber));\n      if (showNumber) setTimeout(() => this.numRef.current.focus(), 0);\n      const userInput = this.state.filteredSuggestions[index][1].Name.replace(/§./g, '');\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        showNumber,\n        reporting,\n        userNumber: '',\n        userInput\n      });\n      this.reportString(reporting, showNumber, this.state.userNumber, userInput, this.state.filteredSuggestions[index][1].Type);\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions\n      } = this.state;\n\n      if (e.currentTarget.value !== '' && showSuggestions && filteredSuggestions.length && filteredSuggestions.length !== this.props.suggestions.length) {\n        if (e.keyCode === 13 || e.keyCode === 9 && !e.shiftKey) {\n          if (filteredSuggestions[activeSuggestion]) {\n            this.select(activeSuggestion);\n          } else {\n            const reporting = e.currentTarget.value;\n            const showNumber = Boolean(this.props.suggestions.find(s => s[0] === reporting && !s[1].NoNumber));\n            this.setState({\n              activeSuggestion: 0,\n              showSuggestions: false,\n              userInput: e.currentTarget.value,\n              showNumber,\n              userNumber: showNumber ? this.state.userNumber : '',\n              reporting\n            });\n            this.reportString(reporting, showNumber, this.state.userNumber, e.currentTarget.value);\n          }\n        } // User pressed the up arrow, decrement the index\n        else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n              return;\n            }\n\n            this.setState({\n              activeSuggestion: activeSuggestion - 1\n            });\n          } // User pressed the down arrow, increment the index\n          else if (e.keyCode === 40) {\n              if (activeSuggestion + 1 === filteredSuggestions.length) {\n                return;\n              }\n\n              this.setState({\n                activeSuggestion: activeSuggestion + 1\n              });\n            }\n      } else {\n        if (e.keyCode === 8 && e.currentTarget.value === '') return this.props.kill();else if (e.keyCode === 38) this.props.up();else if (e.keyCode === 40) this.props.down();else if (e.keyCode === 13) {\n          if (this.state.showNumber) this.numRef.current.focus();else this.props.down();\n        }\n      }\n    };\n\n    this.onKeyDownNumber = e => {\n      if (e.keyCode === 8 && e.currentTarget.value === '') this.props.mainRef.current.focus();else if (e.keyCode === 38) this.props.up();else if (e.keyCode === 40 || e.keyCode === 13) this.props.down();\n    };\n\n    this.onBlur = e => {\n      this.props.timeOutFix(setTimeout(() => this.setState({\n        showSuggestions: false\n      }), 150));\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      activeSuggestion: state.activeSuggestion,\n      filteredSuggestions: state.filteredSuggestions,\n      showSuggestions: state.showSuggestions,\n      userInput: props.says,\n      reporting: state.reporting,\n      userNumber: state.userNumber,\n      showNumber: state.showNumber\n    };\n  }\n\n  reportString(value, showNumber, number, text) {\n    if (text === '') return this.props.report('', '', 'any');\n    value = value.toLowerCase();\n    number = number.toLowerCase();\n    let type = 'any';\n    let match = this.props.suggestions.find(s => value === s[0]);\n\n    if (!match) {\n      match = this.props.suggestions.find(s => s[1].Name.replace(/§./g, '').toLowerCase() === value);\n      if (!match) match = this.props.suggestions.find(s => s[1].Name.replace(/§./g, '').toLowerCase().indexOf(value) > -1);\n\n      if (match) {\n        if (!showNumber && !match[1].NoNumber) {\n          showNumber = true;\n          number = '0+';\n        }\n\n        if (match[1].Name.replace(/§./g, '').toLowerCase() === value) {\n          type = match[1].Type;\n          this.setState({\n            showNumber: !match[1].NoNumber\n          });\n        }\n\n        value = match[0];\n      }\n    } else {\n      type = match[1].Type;\n    }\n\n    if (value === 'color') {\n      const colors = this.props.suggestions.find(s => s[0] === 'color');\n      if (colors && typeof colors[1].Colors[number] !== 'undefined') number = colors[1].Colors[number];\n    }\n\n    if (typeof number === 'undefined' || number === '') number = '0+';\n    if (number.startsWith('<')) number = number.substring(1) + '-';\n    if (number.startsWith('>')) number = number.substring(1) + '+';\n    this.props.report(value + (showNumber ? number : ''), text, type);\n  }\n\n  render() {\n    const {\n      onChange,\n      onNumberChange,\n      onClick,\n      onKeyDown,\n      numRef,\n      onBlur,\n      onKeyDownNumber,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        showNumber,\n        userInput,\n        userNumber\n      }\n    } = this;\n    let suggestionsListComponent;\n    const tabIndex = {};\n    if (!showNumber) tabIndex.tabIndex = -1;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"ul\", {\n          className: `suggestions ${showNumber ? 'SuggestionsHalf' : ''}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }\n        }, filteredSuggestions.slice(0, 8).map((suggestion, index) => {\n          let className; // Flag the active suggestion with a class\n\n          if (index === activeSuggestion) {\n            className = \"suggestion-active\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: className,\n            key: suggestion[0],\n            onClick: onClick,\n            index: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(MinecraftText, {\n            raw: suggestion[1].Name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }\n          }));\n        }));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      onBlur: onBlur,\n      ref: this.props.mainRef,\n      className: `SearchField ${showNumber ? 'Half' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      type: \"text\",\n      onChange: onNumberChange,\n      onKeyDown: onKeyDownNumber,\n      value: userNumber,\n      className: `SearchField NumberField ${showNumber ? '' : 'HideField'}`,\n      ref: numRef\n    }, tabIndex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    })), suggestionsListComponent);\n  }\n\n}\n\nexport default SearchField;","map":{"version":3,"sources":["/home/mcpqndq/repos/PitPandaProduction/frontEnd/src/Components/SearchField/SearchField.js"],"names":["React","Component","Fragment","MinecraftText","SearchField","state","activeSuggestion","filteredSuggestions","showSuggestions","userInput","props","says","reporting","userNumber","showNumber","numRef","createRef","onChange","e","suggestions","currentTarget","value","split","filter","str","test","join","suggestion","Name","replace","toLowerCase","indexOf","Boolean","find","s","NoNumber","setState","reportString","onNumberChange","onClick","select","getAttribute","index","setTimeout","current","focus","Type","onKeyDown","length","keyCode","shiftKey","kill","up","down","onKeyDownNumber","mainRef","onBlur","timeOutFix","getDerivedStateFromProps","number","text","report","type","match","colors","Colors","startsWith","substring","render","suggestionsListComponent","tabIndex","slice","map","className"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport MinecraftText from '../Minecraft/MinecraftText';\nimport './SearchField.css';\n\nclass SearchField extends Component {\n\n    state = {\n        // The active selection's index\n        activeSuggestion: 0,\n        // The suggestions that match the user's input\n        filteredSuggestions: [],\n        // Whether or not the suggestion list is shown\n        showSuggestions: false,\n        // What the user has entered\n        userInput: this.props.says,\n        reporting: this.props.says,\n        userNumber: \"\",\n        showNumber:false\n    };\n\n    static getDerivedStateFromProps(props,state){\n        return {\n            activeSuggestion:state.activeSuggestion,\n            filteredSuggestions:state.filteredSuggestions,\n            showSuggestions:state.showSuggestions,\n            userInput:props.says,\n            reporting:state.reporting,\n            userNumber: state.userNumber,\n            showNumber:state.showNumber\n        }\n    }\n\n    numRef = React.createRef();\n\n    // Event fired when the input value is changed\n    onChange = e => {\n        const { suggestions } = this.props;\n        const userInput = e.currentTarget.value.split('').filter(str=>/[-+_!\"':a-zA-Z0-9 ]/.test(str)).join('');\n\n        // Filter our suggestions that don't contain the user's input\n        const filteredSuggestions = suggestions.filter(\n            suggestion =>\n                suggestion[1].Name.replace(/§./g,'').toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        // Update the user input and filtered suggestions, reset the active\n        // suggestion and make sure the suggestions are shown\n        const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===userInput&&!s[1].NoNumber))\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: userInput,\n            reporting: userInput,\n            showNumber,\n            userNumber:showNumber?this.state.userNumber:''\n        });\n        this.reportString(userInput,showNumber,this.state.userNumber,userInput);\n    };\n\n    reportString(value,showNumber,number,text){\n        if(text==='') return this.props.report('', '', 'any');\n        value=value.toLowerCase();\n        number=number.toLowerCase();\n        let type = 'any';\n        let match = this.props.suggestions.find(s=>value===s[0]);\n        if(!match){\n            match = this.props.suggestions.find(s=>s[1].Name.replace(/§./g,'').toLowerCase() === value);\n            if(!match) match = this.props.suggestions.find(s=>s[1].Name.replace(/§./g,'').toLowerCase().indexOf(value) > -1);\n            if(match) {\n                if(!showNumber&&!match[1].NoNumber){\n                    showNumber=true;\n                    number='0+';\n                }\n                if(match[1].Name.replace(/§./g,'').toLowerCase()===value) {\n                    type=match[1].Type;\n                    this.setState({showNumber:!match[1].NoNumber});\n                }\n                value  = match[0];\n            }\n        }else{\n            type=match[1].Type;\n        }\n        if(value==='color'){\n            const colors = this.props.suggestions.find(s=>s[0]==='color');\n            if(colors&&typeof colors[1].Colors[number] !== 'undefined') number=colors[1].Colors[number];\n        }\n        if(typeof number === 'undefined' || number==='') number = '0+';\n        if(number.startsWith('<')) number=number.substring(1)+'-';\n        if(number.startsWith('>')) number=number.substring(1)+'+';\n        this.props.report(value+(showNumber?number:''), text, type);\n    }\n\n    onNumberChange = e => {\n        let userNumber = e.currentTarget.value.split('').filter(str=>/[-+><0-9a-zA-Z]/.test(str)).join('');\n        this.setState({userNumber});\n        this.reportString(this.state.reporting,true,userNumber,this.state.userInput);\n    }\n\n    onClick = e => {\n        this.select(e.currentTarget.getAttribute('index'));\n    };  \n\n    select = index => {\n        const reporting = this.state.filteredSuggestions[index][0];\n        const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===reporting&&!s[1].NoNumber));\n        if(showNumber) setTimeout(()=>this.numRef.current.focus(),0);\n        const userInput = this.state.filteredSuggestions[index][1].Name.replace(/§./g,'')\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions:[],\n            showSuggestions: false,\n            showNumber,\n            reporting,\n            userNumber:'',\n            userInput\n        });\n        this.reportString(reporting,showNumber,this.state.userNumber,userInput, this.state.filteredSuggestions[index][1].Type);\n    }\n\n    onKeyDown = e => {\n        const { activeSuggestion, filteredSuggestions, showSuggestions } = this.state;\n        if(e.currentTarget.value!=='' && showSuggestions && filteredSuggestions.length && filteredSuggestions.length !== this.props.suggestions.length){\n            if (e.keyCode === 13 || (e.keyCode === 9 && !e.shiftKey)) {\n                if(filteredSuggestions[activeSuggestion]){\n                    this.select(activeSuggestion);\n                }else{\n                    const reporting = e.currentTarget.value;\n                    const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===reporting&&!s[1].NoNumber));\n                    this.setState({\n                        activeSuggestion: 0,\n                        showSuggestions: false,\n                        userInput: e.currentTarget.value,\n                        showNumber,\n                        userNumber: showNumber?this.state.userNumber:'',\n                        reporting\n                    });\n                    this.reportString(reporting,showNumber,this.state.userNumber,e.currentTarget.value);\n                }\n            }\n            // User pressed the up arrow, decrement the index\n            else if (e.keyCode === 38) {\n                if (activeSuggestion === 0) {\n                    return;\n                }\n    \n                this.setState({ activeSuggestion: activeSuggestion - 1 });\n            }\n            // User pressed the down arrow, increment the index\n            else if (e.keyCode === 40) {\n                if (activeSuggestion + 1 === filteredSuggestions.length) {\n                    return;\n                }\n    \n                this.setState({ activeSuggestion: activeSuggestion + 1 });\n            }\n        }else{\n            if (e.keyCode === 8 && e.currentTarget.value==='') return this.props.kill();\n            else if (e.keyCode===38) this.props.up();\n            else if (e.keyCode===40) this.props.down();\n            else if (e.keyCode===13) {\n                if(this.state.showNumber) this.numRef.current.focus();\n                else this.props.down();\n            }\n        }\n    };\n\n    onKeyDownNumber = e => {\n        if (e.keyCode === 8 && e.currentTarget.value==='') this.props.mainRef.current.focus();\n        else if (e.keyCode===38) this.props.up();\n        else if (e.keyCode===40||e.keyCode===13) this.props.down();\n    }\n\n    onBlur = e => {\n        this.props.timeOutFix(setTimeout(()=>this.setState({ showSuggestions: false }),150));\n    }\n\n    render() {\n        const {\n            onChange,\n            onNumberChange,\n            onClick,\n            onKeyDown,\n            numRef,\n            onBlur,\n            onKeyDownNumber,\n            state: {\n                activeSuggestion,\n                filteredSuggestions,\n                showSuggestions,\n                showNumber,\n                userInput,\n                userNumber\n            }\n        } = this;\n\n        let suggestionsListComponent;\n\n        const tabIndex = {};\n        if(!showNumber) tabIndex.tabIndex=-1;\n\n        if (showSuggestions && userInput) {\n            if(filteredSuggestions.length){\n                suggestionsListComponent = (\n                    <ul className={`suggestions ${showNumber?'SuggestionsHalf':''}`}>\n                        {filteredSuggestions.slice(0,8).map((suggestion, index) => {\n                            let className;\n    \n                            // Flag the active suggestion with a class\n                            if (index === activeSuggestion) {\n                                className = \"suggestion-active\";\n                            }\n    \n                            return (\n                                <li\n                                    className={className}\n                                    key={suggestion[0]}\n                                    onClick={onClick}\n                                    index={index}\n                                    >\n                                    <MinecraftText raw={suggestion[1].Name}/>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            }\n        }\n\n        return (\n            <Fragment>\n                <input\n                    type=\"text\"\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                    value={userInput}\n                    onBlur={onBlur}\n                    ref={this.props.mainRef}\n                    className={`SearchField ${showNumber?'Half':''}`}\n                />\n                <input\n                    type=\"text\"\n                    onChange={onNumberChange}\n                    onKeyDown={onKeyDownNumber}\n                    value={userNumber}\n                    className={`SearchField NumberField ${showNumber?'':'HideField'}`}\n                    ref={numRef}\n                    {...tabIndex}\n                />\n                {suggestionsListComponent}\n            </Fragment>\n        );\n    }\n}\n\nexport default SearchField;"]},"metadata":{},"sourceType":"module"}